"""
Django settings for CircleOneV3 project.

Generated by 'django-admin startproject' using Django 2.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import collections
import os

import boto3
from tenant_schemas.storage import TenantStorageMixin

# saas specific settings
# ----------------------
# master domain is localhost in local development

MASTER_SCHEMA_NAME = 'public'
MASTER_DOMAIN = os.environ.get('MASTER_DOMAIN', 'localhost')
DEPLOYMENT_STAGE = os.environ.get('DEPLOYMENT_STAGE', 'local')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#l0+l1twfa$6ddz6sg7mshrr+u)pphb8vc#_+4(he%)33=ce_l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DEPLOYMENT_STAGE != 'production'

# TODO restrict hosts
ALLOWED_HOSTS = [f".{MASTER_DOMAIN}", MASTER_DOMAIN]

# Application definition

SHARED_APPS = (
    'tenant_schemas',  # mandatory, should always be before any django app
    'apps.master',  # the master app

    'django.contrib.contenttypes',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.staticfiles',

    # third party applications
    'rest_framework',
    'django_filters',
    'drf_yasg',
    'rest_framework.authtoken',
    'corsheaders',
    'rest_auth',
    'rest_auth.registration',
)

TENANT_APPS = (
    'django.contrib.contenttypes',

    # tenant specific apps are added here
    'apps.tenant_specific_apps.circle_one.users',
    'apps.tenant_specific_apps.circle_one.customers'

)

INSTALLED_APPS = (
    'tenant_schemas',
    'apps.master',

    'django.contrib.contenttypes',
    'apps.tenant_specific_apps.circle_one.users',
    'apps.tenant_specific_apps.circle_one.customers',

    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.staticfiles',

    # third party applications
    'rest_framework',
    'django_filters',
    'drf_yasg',
    'rest_framework.authtoken',
    'corsheaders',
    'rest_auth',
    'rest_auth.registration',
)

MIDDLEWARE = [
    # middleware by django-tenant-schemas
    'tenant_schemas.middleware.TenantMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'apps.tenant_specific_apps.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CircleOneV3.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # db engine is altered for django-tenant-schemas
        'ENGINE': 'tenant_schemas.postgresql_backend',
        'NAME': 'circleone',
        'USER': 'circleoneadmin',
        'PASSWORD': 'circleonepassword',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
# db routers are required by django-tenant-schemas
DATABASE_ROUTERS = (
    'tenant_schemas.routers.TenantSyncRouter',
)

# custom user model cannot be defined
# AUTH_USER_MODEL = 'users.User'
# AUTHENTICATION_BACKENDS = (
#     'apps.master.auth_backend.AuthenticationBackend',
# )

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DB_UPLOAD_MEDIA_PATH = 'db-uploads'

AWS_PROFILE_NAME = os.environ.get('AWS_PROFILE', 'bluewhirl')

if DEPLOYMENT_STAGE == 'local':
    DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'
    STATICFILES_STORAGE = 'tenant_schemas.storage.TenantStaticFilesStorage'

else:
    STORAGE_S3_BUCKET_NAME = f"{DEPLOYMENT_STAGE}-django-storage-circleone"
    DEFAULT_FILE_STORAGE = 'CircleOneV3.tenant_storage.S3MediaStorage'
    STATICFILES_STORAGE = 'CircleOneV3.tenant_storage.S3StaticStorage'

FRONTEND_MASTER_DOMAIN = 'bluewhirl.io'

# django-tenant-schemas specific
TENANT_MODEL = 'master.Tenant'
PUBLIC_SCHEMA_URLCONF = 'apps.master.urls'

# REST API settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'PAGE_SIZE': 10,
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination'
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}
CORS_ORIGIN_ALLOW_ALL = True

DEFAULT_SENDER_EMAIL = 'noreply'
EMAIL_CONTEXT_PROCESSORS = []
